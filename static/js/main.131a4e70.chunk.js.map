{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pStyle","backgroundColor","position","padding","left","top","transform","style","textAlign","bgImage","strength","height","blur","min","max","renderLayer","percentage","background","width","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLA4EeA,MA3Ef,WAGE,IAAMC,EAAO,CACXC,gBAAgB,QACjBC,SAAS,WACTC,QAAQ,GACPC,KAAK,MACLC,IAAI,MACJC,UAAU,wBAGZ,OACE,sBAAMC,MAAO,CAACC,UAAU,UAAxB,UACE,8BACF,cAAC,WAAD,CAAUC,QAAQ,WAAWC,SAAU,IAAvC,SACE,qBAAKH,MAAO,CAACI,OAAO,KAApB,SACE,mBAAGJ,MAAOP,EAAV,wBAQJ,0CACA,cAAC,WAAD,CAAUS,QAAQ,WAAWC,SAAU,IAAME,KAAM,CAAEC,KAAM,GAAIC,IAAK,IAApE,SACE,qBAAKP,MAAO,CAACI,OAAO,KAApB,SACE,mBAAGJ,MAAOP,EAAV,6BAOJ,0CACA,cAAC,WAAD,CAAUS,QAAQ,WAAWC,UAAW,IAAxC,SACE,qBAAKH,MAAO,CAACI,OAAO,KAApB,SACE,mBAAGJ,MAAOP,EAAV,sDAOJ,0CACA,cAAC,WAAD,CAAUS,QAAQ,WAAWC,UAAW,IACxCK,YAAa,SAAAC,GAAU,OACrB,qBACIT,MAAO,CACHL,SAAU,WACVe,WAAW,qBAAD,OAAoC,EAAbD,EAAvB,KACVZ,KAAM,MACNC,IAAK,MACLC,UAAU,uBACVY,MAAoB,IAAbF,EACPL,OAAqB,IAAbK,EACRG,aAAa,UAXvB,SAgBE,qBAAKZ,MAAO,CAACI,OAAO,KAApB,SACE,qBAAKJ,MAAOP,EAAZ,iCAOJ,qBAAKO,MAAO,CAACI,OAAO,WC3DTS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.131a4e70.chunk.js","sourcesContent":["import {Parallax} from 'react-parallax';\nfunction App() {\n\n\n  const pStyle={\n    backgroundColor:'white',\n   position:'absolute',\n   padding:20,\n    left:'50%',\n    top:'50%',\n    transform:'translate(-50%,-50%)'\n  \n  }\n  return (\n    <div  style={{textAlign:'center'}}>\n      <div>\n    <Parallax bgImage=\"img1.jpg\" strength={280} >\n      <div style={{height:500}}>\n        <p style={pStyle}>DATA</p>\n      </div>\n     \n\n\n\n    </Parallax>\n    </div>\n    <h1> | ] | ]</h1>\n    <Parallax bgImage=\"img2.jpg\" strength={280}  blur={{ min: -15, max: 15 }}>\n      <div style={{height:500}}>\n        <p style={pStyle}>BLUR EFFECT</p>\n      </div>\n     \n\n\n\n    </Parallax>\n    <h1> | ] | ]</h1>\n    <Parallax bgImage=\"img3.jpg\" strength={-280}  >\n      <div style={{height:500}}>\n        <p style={pStyle}>Negative strength for reverse EFFECT</p>\n      </div>\n     \n\n\n\n    </Parallax>\n    <h1> | ] | ]</h1>\n    <Parallax bgImage=\"img4.jpg\" strength={-280} \n    renderLayer={percentage => (\n      <div\n          style={{\n              position: 'absolute',\n              background: `rgba(255, 125, 0, ${percentage * 1})`,\n              left: '50%',\n              top: '50%',\n              transform:'translate(-50%,-50%)',\n              width: percentage * 250,\n              height: percentage * 250,\n              borderRadius:'50%'\n          }}\n      />\n  )}\n  >\n      <div style={{height:500}}>\n        <div style={pStyle}> Render  EFFECT</div>\n      </div>\n     \n\n\n\n    </Parallax>\n    <div style={{height:490}}></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}